function addEvent(obj, name, func) {
	if ( obj.addEventListener ) {
		obj.addEventListener(name, func, false);
	} else if ( obj.attachEvent ) {
		obj.attachEvent('on' + name, func); 
	}
}

function stopEvent(event) {
	if ( event.preventDefault ) {
		event.preventDefault();
		event.stopPropagation();
	} else {
		event.returnValue = false;
		event.cancelBubble = true;
	}
}

function load(mode) {
	try {
		if ( document.getElementById('send_to') != null ) {
			document.getElementById('send_to').focus();
			attach_to_links();
		}
		if ( mode == 'reply' ) {
			document.getElementById('body').focus();
		}
	} catch(e1) {}
	try {
		input_add_events();
	} catch(e2) {}
}

var method = 'IFRAME';

function moveClick(select) {
	// Получаем postfix
	var postfix = select.getAttribute('postfix');
	var postfix_type = select.getAttribute('postfix_type');
	if ( !postfix_type ) {
		postfix_type = 'move';
	}
	if ( postfix_type.length == 0) {
		postfix_type = 'move';
	}
	// Проверяем, является ли запись первой. Если да, то выходим
	if ( select.value == 'no selected 123') {
		return;
	}
	// Выполняем submit форме, при этом submit выставляем от имени кнопки 'переместить'
	var button = document.getElementById(postfix_type + 'Button' + postfix);
	button.click();
}

function pe_over(node) {
	node.className = 'panel_element panel_element_over';
}

function pe_out(node) {
	node.className = 'panel_element';
}

var e = false;

JSL = {};

if ( !methods ) {
	var methods = new Array();
}

JSL.req = {};

JSL.addMethod = function(obj, f, params) {
	po = {o: obj, f: f, params: params};
	methods.push(po);
	var s;
	if ( obj != null ) {
		s = 'methods[' + (methods.length - 1) + '].f1=function(){ methods[' + (methods.length - 1) + '].f.call(methods[' + (methods.length - 1) + '].o,methods[' + (methods.length - 1) + '].params) }';
	} else {
		s = 'methods[' + (methods.length - 1) + '].f1=function(){ methods[' + (methods.length - 1) + '].f(methods[' + (methods.length - 1) + '].params) }';
	}
	eval(s);
	return methods[methods.length - 1].f1;
};

JSL.getLeft = function(node) {
	var resultLeft = 0;
	if ( node == document.body ) {
		return 0;
	}
	if ( !node.offsetParent ) {
		return node.offsetLeft;
	}
	resultLeft = node.offsetLeft + JSL.getLeft(node.offsetParent);
	return resultLeft;
};

JSL.getTop = function(node) {
	var resultTop = 0;
	if ( node == document.body ) {
		return 0;
	}
	if ( !node.offsetParent ) {
		return node.offsetTop;
	}
	resultTop = node.offsetTop + JSL.getTop(node.offsetParent);
	return resultTop;
};

JSL.getMouse = function(e) {
	var cursor = {x:0, y:0};
	if ( ( e.pageX ) || ( e.pageY ) ) {
		cursor.x = e.pageX;
		cursor.y = e.pageY;
	} else {
		var de = document.documentElement;
		var db = document.body;
		cursor.x = e.clientX + ((db)['scrollLeft']) - ((db)['clientLeft']);
		cursor.y = e.clientY + ((db)['scrollTop']) - ((db)['clientTop']);
	}
	return cursor;
};

function showInfoDiv(tag_id) {
	if ( e ) {
		var user_info = $(tag_id);	
		x = JSL.getMouse(e).x;
		y = JSL.getMouse(e).y;
		
		is_ff_2 = false;
		if ( ( !x ) || ( !y ) ) {
			x = JSL.getLeft(e.target);
			y = JSL.getTop(e.target) + e.target.offsetHeight + 2;
			is_ff_2 = true;
		} else {
			x = 10 + x;
			y = 10 + y;
		}
		var x_pos = x;
		var y_pos = y;
		user_info.style.left = x_pos + 'px';
		user_info.style.top = y_pos + 'px';
		if ( ( is_ff_2 ) && ( e.target.tagName !== 'A' ) ) {
			user_info.style.display = 'none';
		} else {
			user_info.style.display = 'block';
		}
	}
}

function hideInfoDiv(tag_id) {
	$(tag_id).style.display = 'none';
}

function checkBox(count_box, c_number) {
	if ( !c_number ) {
		if ( $('check_all').checked ) {
			for ( i = 0; i < count_box; i++ ) {
				$('address_' + i).checked = true;
			}
		} else {
			for ( i = 0; i < count_box; i++ ) {
				$('address_' + i).checked = false;
			}
		}
	} else {
		var flag = 0;
		for ( i = 0; i < count_box; i++ ) {
			if ( $('address_' + i).checked ) {
				flag++;
			}
		}
		if ( flag == count_box ) {
			$('check_all').checked = true;
		} else {
			$('check_all').checked = false;
		}
	}
}

function row_over(row) {
	if ( typeof(row.className) !== 'undefined' && ( row.className != '' ) ) { 
		row.className = row.className + ' row_over';
	} else {
		row.className = 'row_over';
	}
}

function row_out(row) {
	row.className = row.className.replace(/\s*row_over/gi,'');
}

function row_down(row, event) {
	var target = ( ( event.target ) || ( event.srcElement ) );
	var targetTagName = target.tagName.toLowerCase();
	if ( ( targetTagName == 'input' ) || ( targetTagName == 'a' ) ) {
		return;
	}
	row.className = row_className;
}

function row_click(row, event, href) {
	var target = ( ( event.target ) || ( event.srcElement ) );
	var targetTagName = target.tagName.toLowerCase();
	if ( ( targetTagName == 'input' ) || ( targetTagName == 'a' ) ) {
		return;
	}
	var td = row.firstChild;
	while ( td.nodeType == 3 ) {
		td = td.nextSibling;
	}
	var checkbox = row.getElementsByTagName('input')[0];
	while ( checkbox.nodeType == 3 ) {
		checkbox = checkbox.nextSibling;
	}
	if ( checkbox.checked == false ) {
		checkbox.checked = true;
	} else {
		checkbox.checked = false;
	}
}

function sel_all(obj, elm) {
	var ch = document.getElementById(obj + 'allcheck').checked;
	ch_elem = document.getElementsByTagName('input');
	re = new RegExp('^' + elm + '\[[0-9]+\]', 'i');
	for ( var i = 0; i < ch_elem.length; i++ ) {
		if ( ch_elem[i].name.match(re) ) {
			ch_elem[i].checked = ch;
		}
	}
}

function desel_all(obj, elm) {
	document.getElementById(obj + 'allcheck').checked = false;
	ch_elem = document.getElementsByTagName('input');
	re = new RegExp('^' + elm + '\[[0-9]+\]', 'i');
	for ( var i=0; i < ch_elem.length; i++ ) {
		if ( ch_elem[i].name.match(re) ) {
			ch_elem[i].checked = false;
		}
	}
}

function ch_sel(obj, elm) {
	var msg_coun = 0;
	var ch_count = 0;
	ch_elem = document.getElementsByTagName('input');
	re = new RegExp('^' + elm + '\[[0-9]+\]', 'i');
	for ( var i = 0; i < ch_elem.length; i++ ) {
		if ( ch_elem[i].name.match(re) ) {
			if ( ch_elem[i].checked ) {
				ch_count++;
			}
			msg_coun++;
		}
	}
	if ( msg_coun == ch_count ) {
		document.getElementById(obj + 'allcheck').checked = true;
	} else {
		document.getElementById(obj + 'allcheck').checked = false;
	}
}

JSL.loadAjaxResult = function() {
	if ( JSL.req.readyState == 4 ) {
		if ( JSL.req.status == 200 ) {
			var result = JSL.req.responseText;
			result1 = result;
			JSL.node.innerHTML = result1;
			var close = document.getElementById('a_close_header');
			close.style.display = 'none';
			JSL.node.innerHTML += "<br/><center><a href='JavaScript:hideHeader();'>Закрыть</a></center>";
		}
	}
};

JSL.request = function(url, method, func) {
	if ( window.XMLHttpRequest ) {
		JSL.req = new XMLHttpRequest();
		JSL.req.onreadystatechange = func;
		JSL.req.open(method, url, true);
		JSL.req.send(null);
	} else if ( window.ActiveXObject ) {
			JSL.req = new ActiveXObject('Microsoft.XMLHTTP');
			if ( JSL.req ) {
				JSL.req.onreadystatechange = func;
				JSL.req.open(method, url, true);
				JSL.req.send();
			}
	}

}

loadAjax = function(node, url, method) {
	JSL.node = node;
	JSL.request(url, method, JSL.loadAjaxResult);
};

function hideHeader() {
	document.getElementById('ajaxContainer').style.display = 'none';
}

function showheader1(href) {
	showheader(href);
	var container = document.getElementById('ajaxContainer');
	if ( container.style.display !== 'block' ) {
		show_dopinfo_hide();
	} else {
		show_dopinfo_show();
	}
}

function showheader(href) {
	var url = href.href;
	var container = document.getElementById('ajaxContainer');
	if ( container.style.display !== 'block' ) {
		container.style.display = 'block';
		loadAjax(container, url, 'GET');
	} else {
		container.style.display = 'none';
	}
}

function showPerewod() {
	var head = document.getElementById('add_head');
	if ( head.style.display !== 'block' ) {
		show_dopinfo_show();
		showPerewod_show('none', 'block');
	} else {
		showPerewod_show('block', 'block');
		show_dopinfo_hide();
	}
}

function showPerewod_show(style1, style2) {
	var obj = document.getElementById('doptable');
	for ( var n in obj.childNodes ) {
		if ( obj.childNodes[n].style ) {
			obj.childNodes[n].style.display = style1;
		}
	}
	document.getElementById('perewod_row').style.display = style2;
	document.getElementById('sdbottom').style.display = style1;
}

function show_dopinfo_show() {
	//Меняем плюс на минус
	var plus = document.getElementById('imgplus');
	var minus = document.getElementById('imgminus');
	var head = document.getElementById('add_head');
	//Показываем
	head.style.display = 'block';
	minus.style.display = 'inline';
	plus.style.display = 'none';
}

function show_dopinfo_hide() {
	showPerewod_show('block', 'block');
	//Меняем плюс на минус
	var plus=document.getElementById('imgplus');
	var minus=document.getElementById('imgminus');
	var head=document.getElementById('add_head');
	//Показываем
	head.style.display = 'none';
	minus.style.display = 'none';
	plus.style.display = 'inline';
	hideHeader();
}

function show_dopinfo(is_inf) {
	var head=document.getElementById('add_head');
	if ( head.style.display !== 'block' ) {
		show_dopinfo_show();
	} else {
		show_dopinfo_hide();
	}
}

function show_attachments() {
	var ab = document.getElementById('attachments_container');
	if ( ab.style.display == 'block' ) {
		ab.style.display = 'none';
	} else {
		ab.style.display = 'block';
	}
}

function moveMessage(key) {
	if ( key == true ) {
		document.getElementById('which_move').value = '1';
	}
	document.getElementById('move_form').submit();
	return false;
}

var inputs = [];

function input_keydown(event) {
	if ( event ) {
		var e = event;
	} else {
		var e = window.event;
	}
	if ( !e ) {
		return true;
	}
	var input = ( ( e.target ) || ( e.srcElement ) );
	if ( e.keyCode !== 13 ) {
		return true;
	}
	var tn = input.getAttribute('num');
	if ( tn < inputs.length - 1 ) {
		tn++;
	}
	inputs[tn].focus();
	stopEvent(e);
	return false;
}

var tags = [];
function getInputTags(parent) {
	if ( arguments.length == 1 ) {
		tags = [];
	}
	for ( var n = 0; n < parent.childNodes.length; n++ ) {
		if ( parent.childNodes[n].nodeType == 1 ) {
			var node = parent.childNodes[n];
			if ( node.tagName.toLowerCase() == 'input' ) {
				if ( node.type ) {
					if ( node.type == 'text' ) {
						tags[tags.length] = node;
						if ( !node.setAttribute ) {
							continue;
						}
						node.setAttribute('num', tags.length - 1);
					}
				}
			} else {
				if ( node.tagName.toLowerCase() == 'textarea' ) {
					tags[tags.length] = node;
					if ( !node.setAttribute ) {
						continue;
					}
					node.setAttribute('num', tags.length - 1);
				} else {
					getInputTags(node, true);
				}
			}
		}
	}
	if ( arguments.length == 1 ) {
		return tags;
	}
}

var isMSIE = /*@cc_on!@*/false;

function input_add_events() {
	inputs = getInputTags(document.body);
	for ( var n = 0; n < inputs.length; n++) {
		if ( inputs[n].tagName.toLowerCase() !== 'textarea' ) {
			if ( isMSIE ) {
				addEvent(
					inputs[n],
					'keypress',
					function() {
						input_keydown();
					}
				);
			} else {
				if(inputs[n].setAttribute) {
					if (inputs[n].id != 'simple_search')
						inputs[n].setAttribute('onkeypress', 'return input_keydown(event)');
				}
			}
		}
	}
}

is_compose = true;

function getClientWidth() {
	return ( ( ( document.compatMode == 'CSS1Compat' ) && ( !window.opera ) ) ? document.documentElement.clientWidth : document.body.clientWidth );
}

function getClientHeight() {
	return ( ( ( document.compatMode == 'CSS1Compat' ) && ( !window.opera ) ) ? document.documentElement.clientHeight : document.body.clientHeight );
}

function adressbook(obj, obj1, obj2) {
	var wnd = window.open('adr.php?v=2.0&from=' + obj + '&from1=' + obj1 + '&from2=' + obj2, '_adress', 'width=350,height=300,menubar=no,toolbar=no,location=no,scrollbars=no,resizable=yes');

	wnd.left = wnd.screenX = getClientWidth()/2 - 50;
	wnd.top = wnd.screenY = getClientHeight()/2 - 50;
	wnd.focus();
}

function settext(str, str_email) {
	document.getElementById(str).value = str_email;
}

var rusChars = new Array('А','Б','В','Г','Д','Е','Ё','Ж','З','И','Й','К','Л','М','Н','О','П','Р','С','Т','У','Ф','Х','Ч','Ц','Ш','Щ','Э','Ю','Я','Ы','Ъ','Ь',
	'а','б','в','г','д','е','ё','ж','з','и','й','к','л','м','н','о','п','р','с','т','у','ф','х','ч','ц','ш','щ','э','ю','\я','ы','ъ','ь');
var transChars = new Array('A','B','V','G','D','E','Jo','Zh','Z','I','J','K','L','M','N','O','P','R','S','T','U','F','H','Ch','C','Sh','Csh','E','Ju','Ja','Y','\`','\'',
	'a','b','v','g','d','e','jo','zh','z','i','j','k','l','m','n','o','p','r','s','t','u','f','h','ch','c','sh','csh','e','ju','ja','y','\`','\'');
var from = '';

function convert() {
	var textarea = document.getElementById('body');
	from = textarea.value;
	var to = '';
	var len = from.length;
	var character, isRus;
	for ( i = 0; i < len; i++ ) {
		character = from.charAt(i, 1);
		isRus = false;
		for ( j = 0; j < rusChars.length; j++ ) {
			if ( character == rusChars[j] ) {
				isRus = true;
				break;
			}
		}
		to += ( ( isRus ) ? transChars[j] : character );
	}
	textarea.value = to;
	textarea.focus();
}

s_cc = false;
s_bcc = false;
pr_select = false;

function showall() {
	if ( s_cc && s_bcc ) {
		document.getElementById('show_cc_bcc').style.display = 'none';
	}
	return true;
}

function show_cc() {
	s_cc = true;
	document.getElementById('cc_container').style.display = 'block';
	document.getElementById('show_cc').style.display = 'none';
	return showall();
}

function show_bcc() {
	s_bcc=true;
	document.getElementById('bcc_container').style.display = 'block';
	document.getElementById('show_bcc').style.display = 'none';
	return showall();
}

function transl_it() {
	convert();
	return false;
}

function morpholog() {
	window.open('morph.php', '_morph', 'width=600px,height=400px,resizable=yes,scrollbars=yes');
	return false;
}

function htmlspecialchars(string, quote_style) {
	string = string.toString();
	if ( ( quote_style !== 'ENT_COMPAT' ) && ( quote_style !== 'ENT_QUOTES' ) && ( quote_style !== 'ENT_NOQUOTES' )) {
		quote_style = 'ENT_COMPAT';
	}

	string = string.replace(/&/g, '&amp;');
	string = string.replace(/</g, '&lt;');
	string = string.replace(/>/g, '&gt;');

	if ( quote_style == 'ENT_QUOTES' ) {
		string = string.replace(/"/g, '&quot;');
		string = string.replace(/'/g, '&#039;');
	} else if ( quote_style != 'ENT_NOQUOTES' ) {
		string = string.replace(/"/g, '&quot;');
	}

	return string;
}

var is_sigappendclick = false;
var is_sendclick = false;
var is_send_from = false;

function showFrom() {
	var form = document.getElementById('from');
	var span = document.getElementById('fromspan');
	if ( ( !form.style.display ) || ( form.style.display == 'none' ) ) {
		form.style.display = 'inline';
		is_send_from = true;
		span.style.display = 'none';
	} else {
		form.style.display = 'none';
		is_send_from = false;
		span.style.display = 'inline';
		var s = '';
		if ( form.value.length > 45 ) {
			for (var n = 0; n < form.value.length / 45; n++) {
				if ( form.value.length > (n + 1) * 45 ) {
					ss = form.value.substring(n * 45,(n + 1) * 45);
				} else {
					ss = form.value.substring(n * 45);
				}
				if ( ss.indexOf(' ') < 0 ) {
					s += ss + ' ';
				} else {
					s += ss;
				}
			}
		} else {
			s = form.value;
		}
		span.innerHTML = htmlspecialchars(s, 'ENT_QUOTES');
	}
	return true;
}

function end_submit() {
	is_sendclick = false;
}

function is_submit() {
	if ( is_sigappendclick ) {
		is_sigappendclick;
		podpisat();
		end_submit();
		return false;
	}
	// Если открыто поле ввода "от кого" и пользователь не нажал "отправить", то скрываем форму ввода имени пользователя.
	if ( is_send_from ) {
		is_send_from = false;
		showFrom();
	}
	start_attach_load();
}

function dprefsclk(n) {
	if ( !n ) {
		n = '';
	}
	var dprefs = document.getElementById('dprefs' + n);
	var dimageminus = document.getElementById('dimageminus' + n);
	var dimageplus = document.getElementById('dimageplus' + n);
	var dtext = document.getElementById('dtext' + n);
	var hiddenName = 'isBlock' + n + 'Open';
	var hidden = document.getElementById(hiddenName);
	if ( dprefs.style.display !== 'none' ) {
		//Установка исходника картинки с плюсиком и возможно чего-то ещё
		try {
			hidden.value = '0';
		} catch ( e1 ) {}

		dimageplus.style.display = 'block';
		dimageminus.style.display = 'none';
		dprefs.style.display = 'none';
	} else {
		//Установка исходника картинки с плюсиком и возможно чего-то ещё
		try {
			hidden.value = '1';
		} catch ( e1 ) {}

	dimageplus.style.display = 'none';
	dimageminus.style.display = 'block';
	dprefs.style.display = 'block';
	}
}

//Функция запрещает ввод данных в поля
function disableFields() {
	document.getElementById('body').readonly = 'true';
	document.getElementById('subject').readonly = 'true';
	document.getElementById('send_to').readonly = 'true';
	document.getElementById('send_to_cc').readonly = 'true';
	document.getElementById('send_to_bcc').readonly = 'true';
}

function controlTypes() {
	var dtypes = {".exe":1, ".cmd":1, ".pif":1, ".bat":1, ".scr":1, ".lnk":1, ".com":1, ".vbs":1, ".vb":1, ".vbe":1, ".js":1, ".jse":1, ".reg":1, ".msi":1, ".cpl":1, ".shs":1};
	var name = document.getElementById('afile').value;
	rash=name.substr(name.lastIndexOf('.')).toLowerCase();
	if ( dtypes[rash] == 1 ) {
		//window.stop();
		alert(t_alert);
		//window.stop();
		return false;
	}
	return true;
}

//Вращающийся индикатор загрузки
function start_attach_progress(dop) {
	if ( dop ) {
		name += '_' + dop;
	}
	//Проверяем типы файлов
	if ( !controlTypes() ) {
		return false;
	}
	//Запрещаем ввод данных в поля
	disableFields();
	//Цепляем событие onAbort
/*
	addEvent(window, 'abort',
		function() {
			alert('abort');
		}
	);
*/
	//window.onAbort = function(){alert('abort');}
	//alert(window.onabort);
	window.loadClick = true;
}

function start_attach_load() {
	var name = 'attach_progress_container';
	var div = document.getElementById(name);
	if ( div.childNodes ) {
		if ( div.childNodes.length > 0 ) {
			return false;
		}
	}
	if ( window.loadClick ) {
		div.appendChild(document.getElementById('attach_progress_i').cloneNode(true));
	}
}

//-----------------------------------------------------------
//Выпадающий список
//-----------------------------------------------------------
function asp_over(e) {
	var targ = ( ( e.target ) || ( e.srcElement ) );
	if ( targ.tagName.toLowerCase() == 'a') {
		targ = targ.parentNode;
	}
	var div = document.getElementById('selectDiv');
	if (div.selIndex >= 0)
		div.childNodes[div.selIndex].className = 'select_nosel';
	for ( var n in div.childNodes ) {
		var node = div.childNodes[n];
		if ( node == targ ) {
			node.className = 'select_sel';
			div.selIndex = n;
		}
	}
}

function SelectSpNext() {
	var div = document.getElementById('selectDiv');
	if ( div.style.display !== 'block') {
		return false;
	}
	var sel = Number(div.selIndex) + 1;
	if ( sel > div.childNodes.length - 1 ) {
		return false;
	}
	div.selIndex = sel;
	if (sel > 0)
		div.childNodes[sel - 1].className = 'select_nosel';
	div.childNodes[sel].className = 'select_sel';
	if ( div.childNodes[sel].offsetTop + 50 > div.offsetHeight ) {
		div.scrollTop = 50 + div.childNodes[sel].offsetTop - div.offsetHeight;
	}
}

function SelectSpPrev() {
	var div = document.getElementById('selectDiv');
	if ( div.style.display !== 'block') {
		return false;
	}
	var sel = div.selIndex - 1;
	div.selIndex = sel;
	div.childNodes[sel + 1].className = 'select_nosel';
	if (sel >= 0)
		div.childNodes[sel].className = 'select_sel';
	if ( ( div.scrollTop > 0 ) && ( div.childNodes[sel].offsetTop < div.scrollTop + 10 ) ) {
		div.scrollTop = div.childNodes[sel].offsetTop - 10;
	}
}

function hideSelectDiv() {
	var div = document.getElementById('selectDiv');
	div.style.display = 'none';
	is_c_form = false;
	pr_select = true;
}

function setT(id, text) {
	lf = '/\&lt;/mi';
	lt = '<';
	rf = '/\&gt;/mi';
	rt = '>';
	var v = document.getElementById(id).value;
	add_zap(document.getElementById(id), ' ');
	var adr = text.replace(/<b>/mig, '').replace(/<\/b>/mig, '');
	adr = adr.replace(/\&lt\;/mig, '<').replace(/\&gt\;/mig, '>');
	//Вычисляем максимальную позицию
	pos = v.lastIndexOf(',');
	if ( v.lastIndexOf("\n") > pos ) {
		pos = v.lastIndexOf("\n");
	}
	if ( pos ) {
		v = v.substr(0, pos + 1) + ' ' + adr;
	} else {
		v = adr;
	}
	document.getElementById(id).value=trim(v) + ', ';
	document.getElementById(id).focus();
}

function setAdv(id, text) {
	var v = document.getElementById(id).value;
	var adr = text.replace(/<b>/mig, '').replace(/<\/b>/mig, '').replace(/\&lt\;/mig, '<').replace(/\&gt\;/mig, '>');
	var m = adr.match(/[\w-.]+@[\w-.]+/);
	if (m.length) {
		adr = m[0];
	}
	//Вычисляем максимальную позицию
	pos = v.lastIndexOf(' ');
	if ( v.lastIndexOf("\n") > pos ) {
		pos = v.lastIndexOf("\n");
	}
	if ( pos ) {
		v = v.substr(0, pos + 1) + ' ' + adr;
	} else {
		v = adr;
	}
	document.getElementById(id).value=trim(v) + ' ';
	document.getElementById(id).focus();
}

rff = function($0, $1, $2) {
	return $1 + "#b0459787565722545#" + $2 + "#/b986545890089776#";
};

noInAdress = function(email) {
	if(email.length==0)
		return true;
	var send_to=document.getElementById("send_to");
	var send_to_cc=document.getElementById("send_to_cc");
	var send_to_bcc=document.getElementById("send_to_bcc");
	var adresses=send_to.value+" "+send_to_cc.value+" "+send_to_bcc.value;
	//Проверяем, есть ли в e-mail адрес в "<>". Если в адресе есть """, то вычленяем текст в кавычках
	if(email.indexOf("\"")>-1)
		{
		arr=email.split("\"");
		email=arr[2];
		}
	if(email.indexOf("<")>-1)
		email=email.substring(email.indexOf("<")+1);
	if(email.length===0)
		return true;
	if(email.indexOf(">")>-1)
		email=email.substring(0,email.indexOf(">"));

	if ( email.length === 0 ) {
		return true;
	}
	if ( adresses.indexOf(email) > -1 ) {
		return false;
	}
	return true;
};

has = function(text, email) {
	text=text.replace(/\<b\>/mi,"").replace(/\<\/b\>/mi,"");
	reg=new RegExp("([\'\<\ \;]+)"+email+"([\'\>\ \&]+)","mi");

	if((text.replace(reg,"").length===text.length)&&(text.indexOf("&lt;"+email+"&gt;")<0)&&(text.indexOf("<"+email+">")<0)&&(text.indexOf(" "+email+" ")<0)&&(text.indexOf(" "+email+",")<0)&&(text.indexOf(email)!==0)) {
		return false;
	} else {
		return true;
	}
};

showResult = function(options1) {
	search = trim(search);

	var div = document.getElementById('selectDiv');
	div.selIndex = 0;

	if ( ( options1 === false ) || ( is_options === false ) ) {
		hideSelectDiv();
		return false;
	}
	is_c_form = true;
	options = {};
	var is_options = false;
	es = '';
	var reg = new RegExp("([\<\ ]+)(" + trim(search) + ')', 'mi');
	//alert("'" + search + "'");
	for ( var n in options1 ) {
		str = options1[n];
		if ( str.toLowerCase().indexOf(trim(search)) >= 0 ) {
			if ( ( str.lastIndexOf('@') < 0 ) || ( str.lastIndexOf('@') > str.toLowerCase().indexOf(trim(search)) ) ) {
				//Проверяем, нет ли текущего адреса в адресной строке
				str1 = str;
				if ( str.toLowerCase().indexOf(search) === 0 ) {
					str = '#b0459787565722545#' + str.substr(0, search.length) + '#/b986545890089776#' + str.substr(search.length);
				}
				str = str.replace(/\&gt;/mig, '>').replace(/\&lt;/mig, '<');
				if ( noInAdress(str) ) {
					str = str.replace(reg, rff);
					str = str.replace(/\>/mig, '&gt;').replace(/\</mig, '&lt;');
					str = str.replace(/\#b0459787565722545\#/mig, '<b>').replace(/\#\/b986545890089776\#/mig, '</b>');

					options[n] = str;
					str2 = str;
					is_options = true;
					es = es + "'" + str1 + "'=>'" + str2 + "'\n";
				}
			}
		}
	}

	var input = document.getElementById(JSL.nextId);
	var inputText = new String(input.value);
	inputText = inputText.replace(/\<b\>/mi, '').replace(/\<\/b\>/mi, '');

	var div = document.getElementById('selectDiv');
	var str = '';
	div.innerHTML = '';
	for ( var n in options ) {
		//Проверяем, надо ли добавлять такой адрес - может быть, он уже есть в списке адресов?
		//Вычленяем e-mail
		var st = options[n];
		if ( ( st.indexOf('&lt;') > -1 ) && ( st.indexOf('&gt;') > st.indexOf('&lt;') ) ) {
			email = st.substring(st.indexOf('&lt;') + 4, st.indexOf('&gt;'));
		} else {
			email = st;
		}
		email = trim(email);
		email = email.replace('<b>', '').replace('</b>', '');

		//Проверяем, есть ли такой e-mail в списке адресов
		//Проверяем также, нет ли уже в списке такого адреса.
		if ( ( !has(inputText, email) ) && ( !has(str,email) ) ) {
			sClick = "var div=document.getElementById('selectDiv');setT(JSL.nextId,div.childNodes[div.selIndex].firstChild.innerHTML);hideSelectDiv();return false;";
			str += '<div class="select_nosel" onmouseover="asp_over(event);" onclick="' + sClick + '"><a href="#">' + options[n] + '</a></div>';
		} else {
			//alert(email);
		}
	}
	str = trim(str);
	if ( str.length > 0 ) {
		div.innerHTML = str;
	} else {
		hideSelectDiv();
		return false;
	}
	if ( div.childNodes[0] == undefined ) {
		return;
	}
	div.childNodes[0].className = 'select_sel';
	var x = input.offsetLeft;
	var y = input.offsetTop + input.offsetHeight;
	div.style.left = x + 'px';
	div.style.top = y + 'px';
	div.style.width = (input.offsetWidth - 4) + 'px';
	div.style.display = 'block';
	div.scrollTop = 0;
	
	if ( div.offsetHeight > 300 ) {
		div.style.overflow = 'scroll';
		div.style.height = '300px';
	}
};

showSearchAdvice = function(options1) {
	search = trim(search);

	var div = document.getElementById('selectDiv');
	div.selIndex = -1;

	if ( ( options1 === false ) || ( is_options === false ) ) {
		hideSelectDiv();
		return false;
	}
	is_c_form = true;
	options = {};
	var is_options = false;
	es = '';
	var reg = new RegExp("([\<\ ]+)(" + trim(search) + ')', 'mi');
	//alert("'" + search + "'");
	for ( var n in options1 ) {
		str = options1[n];
		if ( str.indexOf('@') < 0 )
			continue;
		if ( str.toLowerCase().indexOf(trim(search)) >= 0 ) {
			if ( ( str.lastIndexOf('@') < 0 ) || ( str.lastIndexOf('@') > str.toLowerCase().indexOf(trim(search)) ) ) {
				//Проверяем, нет ли текущего адреса в адресной строке
				str1 = str;
				if ( str.toLowerCase().indexOf(search) === 0 ) {
					str = '#b0459787565722545#' + str.substr(0, search.length) + '#/b986545890089776#' + str.substr(search.length);
				}
				str = str.replace(/\&gt;/mig, '>').replace(/\&lt;/mig, '<');
				if ( true ) {
					str = str.replace(reg, rff);
					str = str.replace(/\>/mig, '&gt;').replace(/\</mig, '&lt;');
					str = str.replace(/\#b0459787565722545\#/mig, '<b>').replace(/\#\/b986545890089776\#/mig, '</b>');

					options[n] = str;
					str2 = str;
					is_options = true;
					es = es + "'" + str1 + "'=>'" + str2 + "'\n";
				}
			}
		}
	}

	var input = document.getElementById(JSL.nextId);
	var inputText = new String(input.value);
	inputText = inputText.replace(/\<b\>/mi, '').replace(/\<\/b\>/mi, '');

	var div = document.getElementById('selectDiv');
	var str = '';
	var num = 0;
	div.innerHTML = '';
	for ( var n in options ) {
		//Проверяем, надо ли добавлять такой адрес - может быть, он уже есть в списке адресов?
		//Вычленяем e-mail
		var st = options[n];
		if ( ( st.indexOf('&lt;') > -1 ) && ( st.indexOf('&gt;') > st.indexOf('&lt;') ) ) {
			email = st.substring(st.indexOf('&lt;') + 4, st.indexOf('&gt;'));
		} else {
			email = st;
		}
		email = trim(email);
		email = email.replace('<b>', '').replace('</b>', '');

		if (++num >= 15)
			break;

		//Проверяем, есть ли такой e-mail в списке адресов
		//Проверяем также, нет ли уже в списке такого адреса.
		if ( true ) {
			sClick = "var div=document.getElementById('selectDiv');setAdv(JSL.nextId,div.childNodes[div.selIndex].firstChild.innerHTML);hideSelectDiv();return false;";
			str += '<div class="select_nosel" onmouseover="asp_over(event);" onclick="' + sClick + '"><a href="#">' + options[n] + '</a></div>';
		} else {
			//alert(email);
		}
	}
	str = trim(str);
	if ( str.length > 0 ) {
		div.innerHTML = str;
	} else {
		hideSelectDiv();
		return false;
	}
	if ( div.childNodes[0] == undefined ) {
		return;
	}
	if (div.style.display != 'block') {
		//div.childNodes[0].className = 'select_sel';
		div.selIndex = -1;
		var x = input.offsetLeft;
		var y = input.offsetTop + input.offsetHeight;
		div.style.left = x + 'px';
		div.style.top = y + 'px';
		div.style.width = (input.offsetWidth - 4) + 'px';
		div.style.display = 'block';
		div.scrollTop = 0;
	}
	
	if ( div.offsetHeight > 300 ) {
		div.style.overflow = 'scroll';
		div.style.height = '300px';
	}
};

JSL.loadAjaxSearch = function() {
	if ( JSL.req.readyState == 4 ) {
		if ( JSL.req.status == 200 ) {
			var result = JSL.req.responseText;

			eval('options=' + result);
			loaded[search] = options;

			if ( result.length <= 2 ) {
				showResult(false);
			}
			showResult(options);
		}
	}
};

JSL.loadAjaxSearchAdvice = function() {
	if ( JSL.req.readyState == 4 ) {
		if ( JSL.req.status == 200 ) {
			var result = JSL.req.responseText;
			try {
			eval('options=' + result);
			loaded[search] = options;
			 } catch(err) { 
				 return false;
			 }
			if ( result.length <= 2 ) {
				showResult(false);
			}
			showSearchAdvice(options);
		}
	}
};

JSL.nextId = '';

function inputDown(e, nextId) {
	var code = e.keyCode;
	if ( ( code == 13 ) && ( !is_c_form ) ) {
		return false;
	}
	if ( code == 40 ) {
		SelectSpNext();
		if ( is_c_form ) {
			return false;
		} else {
			return true;
		}
	}
	if ( code == 38 ) {
		SelectSpPrev();
		if ( is_c_form ) {
			return false;
		} else {
			return true;
		}
	}
	if ( code == 27 ) {
		hideSelectDiv();
	}
}

window.searchSubmiteed=false;

function searchInputDown(e, nextId) {
	var code = e.keyCode;
	if ( ( code == 13 ) && ( !is_c_form ) && ( !window.searchSubmiteed ) ) {
		window.searchSubmiteed=true;
		document.getElementById('search_button_small').click();
		return false;
	}
	if ( code == 40 ) {
		SelectSpNext();
		if ( is_c_form ) {
			return false;
		} else {
			return true;
		}
	}
	if ( code == 38 ) {
		SelectSpPrev();
		if ( is_c_form ) {
			return false;
		} else {
			return true;
		}
	}
	if ( code == 27 ) {
		hideSelectDiv();
	}
}

function searchInputPress(event) {
	if(event.keyCode==13) {
		if (!is_c_form && !window.searchSubmiteed) {
			window.searchSubmiteed=true;
			document.getElementById('search_button_small').click();
		}
		return false;
	}
	return true;
}

loaded = {};
search = '';

function trim(str) {
	return str.replace(/(^\s+)|(\s+$)/g, '');
}

is_c_form = false;

function add_zap(area, razd) {
	var text = trim(area.value);
	if ( text.length == 0 ) {
		return false;
	}
	a_area = text.split("\n");
	for ( n in a_area ) {
		a_a = a_area[n];
		t_a = trim(a_a);
		if ( a_area[n + 1] != undefined ) {
			n_t_a = trim(a_area[n + 1]);
		} else {
			n_t_a = undefined;
		}
		if ( t_a.length == 0 ) {
			continue;
		}
		if ( n_t_a !== undefined ) {
			if ( n_t_a.charAt(0) == ',' ) {
				continue;
			}
		}
		if ( t_a.charAt(t_a.length - 1) !== ',') {
			t_a = t_a + ', ';
		}
		a_area[n] = t_a;
	}
	var value = trim(a_area.join(razd));
	area.value = value;
	return true;
}

function area_blur(area) {
	if ( is_c_form ) {
		return;
	}
	return add_zap(area, ' ');
}

function searchInputUp(e, nextId, area) {
	var code=e.keyCode;
	if ( ( code == 38 ) || ( code == 40 ) || ( code == 13 ) || ( code == 27 ) ) {
		if ( is_c_form ) {
			return false;
		} else {
			if ( ( code == 13 ) || ( code == 27 ) ) {
				return false;
			}
		}
	}
	JSL.nextId = nextId;
	var targ = ( ( e.target ) || ( e.srcElement ) );
	var v = trim(targ.value);

	var to_string = v;
	if ( v.lastIndexOf(' ') > -1 ) {
		v = v.substring(v.lastIndexOf(',') + 1);
	}
	if ( v.lastIndexOf("\n") > -1 ) {
		v = v.substring(v.lastIndexOf("\n") + 1);
	}
	while ( v[0] == ' ') {
		v = v.substring(1);
	}
	if ( v.length == 0 ) {
		hideSelectDiv();
		return true;
	}
//	Проверяем, нет ли уже данных в массиве. При этом проверяем наличие данных не только по текущему слову, но и по 1-му,2-му и т. д. символу.
//	Например, если уже есть данные по 1-му символу, то можно построить список на основе этих данных. Данные храним в массиве loaded

//	Если данные есть, то выводим подсказку на основе этих данных, иначе пытаемся найти данные по предыдущим n,n-1,n-2,...1 символам.
//	Если не находим, то получаем их Ajax-запросом.
	v = v.toLowerCase();
	var ks = v;

	while ( !loaded[ks] && ( ks.length > 0 ) ) {
		ks = ks.substr(0, ks.length - 1);
	}

	search = trim(v);
	if ( ( ks.length > 0 ) && ( ( ks.length == v.length ) || ( loaded[ks].length < 100 ) ) ) {
//	Значит, мы нашли то, что искали
//	В таком случае фильтруем по содержимому
//	Только тут возникает вопрос, как именно фильтровать эти данные. Можно, конечно, просто по наличию строки. Попробую так. Но тут сразу возникают сомнения
		data = loaded[ks];

//		Строим результат
		showSearchAdvice(data);
	} else {
		var adr = 'adress_list.php?v=2.0&opt=clist&search=' + escape(trim(v)) + '&list=all';
		JSL.request(adr, 'GET', JSL.loadAjaxSearchAdvice);
	}
}

function inputUp(e, nextId, area) {
	var code=e.keyCode;
	if ( ( code == 38 ) || ( code == 40 ) || ( code == 13 ) || ( code == 27 ) ) {
		if ( is_c_form ) {
			return false;
		} else {
			if ( code == 13 ) {
				return false;
			}
//			Если мы тут, то надо добавить запятую к предыдущей строке в случае, если её там нет.
			if ( area ) {
				if ( pr_select ) {
					pr_select = false;
				} else {
//					add_zap(area, ' ');
//					area.setCaretPosition(area.getDocument().getLength());
				}
			}
		}
	}
	JSL.nextId = nextId;
	var targ = ( ( e.target ) || ( e.srcElement ) );
	var v = trim(targ.value);

	var to_string = v;
	if ( v.lastIndexOf(',') > -1 ) {
		v = v.substring(v.lastIndexOf(',') + 1);
	}
	if ( v.lastIndexOf("\n") > -1 ) {
		v = v.substring(v.lastIndexOf("\n") + 1);
	}
	while ( v[0] == ' ') {
		v = v.substring(1);
	}
	if ( v.length == 0 ) {
		hideSelectDiv();
		return true;
	}
//	Проверяем, нет ли уже данных в массиве. При этом проверяем наличие данных не только по текущему слову, но и по 1-му,2-му и т. д. символу.
//	Например, если уже есть данные по 1-му символу, то можно построить список на основе этих данных. Данные храним в массиве loaded

//	Если данные есть, то выводим подсказку на основе этих данных, иначе пытаемся найти данные по предыдущим n,n-1,n-2,...1 символам.
//	Если не находим, то получаем их Ajax-запросом.
	v = v.toLowerCase();
	var ks = v;

	while ( !loaded[ks] && ( ks.length > 0 ) ) {
		ks = ks.substr(0, ks.length - 1);
	}

	search = trim(v);
	if ( ( ks.length > 0 ) && ( ( ks.length == v.length ) || ( loaded[ks].length < 100 ) ) ) {
//	Значит, мы нашли то, что искали
//	В таком случае фильтруем по содержимому
//	Только тут возникает вопрос, как именно фильтровать эти данные. Можно, конечно, просто по наличию строки. Попробую так. Но тут сразу возникают сомнения
		data = loaded[ks];

//		Строим результат
		showResult(data);
	} else {
		var adr = 'adress_list.php?v=2.0&opt=clist&search=' + escape(trim(v)) + '&list=all';
		JSL.request(adr, 'GET', JSL.loadAjaxSearch);
	}
}

function inputClick(event, nextId) {
	var div = document.getElementById('selectDiv');
	var code = event.keyCode;
	document.prKeyCode = code; 

	if ( ( code == 13 ) && ( !is_c_form ) ) {
		return false;
	}

	if ( code == 13 ) {
		if ( div.style.display == 'block') {
			setT(JSL.nextId, div.childNodes[div.selIndex].firstChild.innerHTML);
			hideSelectDiv();
			return false;
		} else {
			if ( nextId !== false ) {
				document.getElementById(nextId).focus();
			}
		}
	}

	if ( nextId !== false ) {
		return event.keyCode != 13;
	} else {
		return event.keyCode;
	}
}

function searchInputClick(event, nextId) {
	var div = document.getElementById('selectDiv');
	var code = event.keyCode;
	document.prKeyCode = code; 

	if ( ( code == 13 ) && ( !is_c_form ) && (!window.searchSubmiteed) ) {
		window.searchSubmiteed=true;
		document.getElementById('search_button_small').click();
		return false;
	}

	if ( code == 13 ) {
		if ( div.style.display == 'block') {
			if (div.selIndex >= 0)
				setAdv(JSL.nextId, div.childNodes[div.selIndex].firstChild.innerHTML);
			hideSelectDiv();
			window.searchSubmiteed=true;
			//if (div.selIndex < 0)
				document.getElementById('search_button_small').click();
			return false;
		} else {
			if ( nextId !== false ) {
				document.getElementById(nextId).focus();
			}
		}
	}

	if ( nextId !== false ) {
		return event.keyCode != 13;
	} else {
		return event.keyCode;
	}
}


